/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    global-quick-tap;
    quick-tap-ms = <170>;
};

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
};

/ {
    macros {
        arrow_fn: arrow_fn {
            compatible = "zmk,behavior-macro";
            label = "ARROW_FN";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };

        full_arrow_fn: full_arrow_fn {
            compatible = "zmk,behavior-macro";
            label = "FULL_ARROW_FN";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp T &kp SPACE &kp F &kp N &kp SPACE &kp EQUAL &kp SPACE &kp LPAR &kp RPAR &kp SPACE &kp EQUAL &kp GT &kp SPACE &kp LEFT_BRACE &kp RBRC>;
        };

        const_wrd: const_wrd {
            compatible = "zmk,behavior-macro";
            label = "CONST_WRD";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp T &kp SPACE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader_r {
            bindings = <&bootloader>;
            key-positions = <11 69>;
        };

        bootloader_l {
            bindings = <&bootloader>;
            key-positions = <0 56>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                                  |  6     |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |                  |  )    |  Y     |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |                  |  ]    |  H     |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN |   HOME | END   |  N     |  M    |  ,    |  .   | /  | SHFT(RET) |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   |   DEL  | SPACE |  RAISE | LEFT  | DOWN | UP |   RIGHT   |

            bindings = <
&kp GRAVE  &kp N1       &kp N2          &kp N3          &kp N4            &kp N5                                                                    &kp N6                &kp N7             &kp N8           &kp N9          &kp N0                  &kp MINUS
&kp TAB    &kp Q        &kp W           &kp E           &kp R             &kp T      &kp LPAR                                      &kp RPAR         &kp Y                 &kp U              &kp I            &kp O           &kp P                   &kp EQUAL
&kp ESC    &mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G      &kp LBKT                                      &kp RBKT         &kp H                 &mt RIGHT_SHIFT J  &mt RIGHT_GUI K  &mt LEFT_ALT L  &mt RIGHT_CONTROL SEMI  &kp SQT
&kp LSHFT  &kp Z        &kp X           &kp C           &kp V             &kp B      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT        &kp N                 &kp M              &kp COMMA        &kp DOT         &kp FSLH                &kp BACKSLASH
&kp LCTRL  &kp LALT     &kp LGUI        &kp LEFT_SHIFT                    &lt 6 ESC  &lt 4 SPACE     &lt 5 TAB       &lt 2 ENTER   &lt 1 BACKSPACE          &lt 3 DELETE                     &kp LEFT         &kp DOWN        &kp UP                  &kp RIGHT
            >;
        };

        num-r1 {
            // --------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |   4   |  5  |                   ---              |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
            // | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
            // | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |

            bindings = <
&trans  &kp LC(Z)         &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(LS(Z))                                           &kp LC(LS(Z))               &kp LC(V)        &kp LC(C)      &kp LC(X)      &kp LC(Z)          &trans
&trans  &kp LEFT_BRACKET  &kp N7     &kp N8     &kp N9     &kp RIGHT_BRACKET  &trans                       &trans  &kp LG(LS(Z))               &kp LG(V)        &kp LG(C)      &kp LG(X)      &kp LG(Z)          &trans
&trans  &kp SEMI          &kp N4     &kp N5     &kp N6     &kp EQUAL          &trans                       &trans  &kp LS(LC(LG(N3)))          &kp RIGHT_SHIFT  &kp RIGHT_GUI  &kp LEFT_ALT   &kp RIGHT_CONTROL  &trans
&trans  &kp GRAVE         &kp N1     &kp N2     &kp N3     &kp BACKSLASH      &trans  &trans     &kp CAPS  &trans  &kp LS(LC(LG(N4)))          &kp LG(LS(E))    &kp LG(P)      &kp LG(LS(F))  &kp LG(B)          &trans
&trans  &trans            &trans     &trans                &kp PERIOD         &kp N0  &kp MINUS  &trans    &trans                      &trans                   &trans         &trans         &trans             &trans
            >;
        };

        sym-r2 {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6   |  7   |  8   |  9   |  0    |  DEL  |
            // | ESC   |  !  |  @  |   #   |  $  |  %  |   (   |           ---        |  )    |  ^   |  &   |  *   |  (   |  )    |  DEL  |
            // | CTRL  |  _  |  +  |   {   |  }  | "|" |   [   |           ---        |  ]    | HOME | PGUP | PRSC | UP   |  `    |   ~   |
            // | SHIFT | ESC | GUI |   (   |  )  |     | PG_UP | PG_DOWN | --- | HOME | END   | END  | PGDN | LEFT | DOWN | RIGHT |  RET  |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |    RAISE    | LEFT | DOWN | UP    | RIGHT |

            bindings = <
&trans   &trans          &trans           &full_arrow_fn   &const_wrd            &arrow_fn                                                                &trans          &trans              &trans              &trans            &trans             &trans
&trans   &kp LEFT_BRACE  &kp AMPERSAND    &kp KP_ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE   &kp LESS_THAN                                  &trans  &trans          &kp HOME            &kp PAGE_DOWN       &kp PG_UP         &kp END            &trans
&kp ESC  &kp COLON       &kp DOLLAR       &kp PERCENT      &kp CARET             &kp PLUS          &kp QUESTION                                   &trans  &trans          &kp RIGHT_SHIFT     &kp RIGHT_COMMAND   &kp LEFT_ALT      &kp RIGHT_CONTROL  &trans
&trans   &kp TILDE       &kp EXCLAMATION  &kp AT           &kp POUND             &kp PIPE          &trans                 &trans          &trans  &trans  &trans          &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT)      &trans
&trans   &trans          &trans           &trans                                 &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &trans  &trans          &trans                      &trans              &trans            &trans             &trans
            >;
        };

        fun-r3 {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans                                           &trans          &trans     &trans    &trans    &trans     &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN  &trans                  &trans  &trans          &trans     &trans    &trans    &trans     &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK   &trans                  &trans  &trans          &kp RSHFT  &kp RGUI  &kp LALT  &kp RCTRL  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK  &trans  &trans  &trans  &trans  &trans          &trans     &trans    &trans    &trans     &trans
&trans  &trans   &trans  &trans          &kp K_APP        &trans  &trans  &trans  &trans          &trans             &trans    &trans    &trans     &trans
            >;
        };

        nav-l1 {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans                                  &kp LC(LS(Z))          &kp LC(V)  &kp LC(C)      &kp LC(X)     &kp LC(Z)   &trans
&trans  &trans     &trans    &trans    &trans     &trans  &trans                  &trans  &kp LG(LS(Z))          &kp LG(V)  &kp LG(C)      &kp LG(X)     &kp LG(Z)   &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans  &trans                  &trans  &kp CAPSLOCK           &kp LEFT   &kp DOWN       &kp UP        &kp RIGHT   &trans
&trans  &trans     &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans  &kp INSERT             &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP   &kp END     &trans
&trans  &trans     &trans    &trans               &trans  &trans  &trans  &trans  &trans                 &trans             &kp LC(LEFT)   &kp LC(DOWN)  &kp LC(UP)  &kp LC(RIGHT_ARROW)
            >;
        };

        mse-l2 {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans                                  &trans          &trans        &trans        &trans      &trans         &trans
&trans  &trans     &trans    &trans    &trans     &trans  &trans                  &trans  &trans          &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans  &trans                  &trans  &trans          &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT      &trans
&trans  &trans     &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans          &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP)  &kp LC(RIGHT)  &trans
&trans  &trans     &trans    &trans               &trans  &trans  &trans  &trans  &trans          &trans                &trans        &trans      &trans         &trans
            >;
        };

        med-l3 {
            // -----------------------------------------------------------------------------------------
            // |  F1   |  F2   |    F3    |    F4     |     F5     | F6 |                   ---                | F7  | F8  |  F9  |  F10 | F11 | F12        |
            // | TAB   |       |          |           |            |    | BOOTL |           ---        |  )    | BT1 | BT2 |  BT3 |  BT4 | BT5 | OUTPUT TGL |
            // | CTRL  | MUTE  |  Vol Dn  |  Vol Up   | Play/Pause |    | RESET |           ---        |  ]    | F1  | F2  |  F3  |  F4  | F5  | F6         |
            // | SHIFT | PSCRN |  PSCRN   |   CAPS    |            |    | PG_UP | PG_DOWN | --- | HOME | END   | F7  | F8  |  F9  |  F10 | F11 | F12        |
            // | CRTL  | ALT   |  GUI     |   LOWER   |      GUI        | LOWER | SPACE   | --- | DEL  | SPACE |   RAISE   | LEFT | DOWN | UP  |   RIGHT    |

            bindings = <
&bootloader  &trans     &trans    &trans    &trans     &trans                                                &trans                         &trans        &trans             &trans           &trans        &bootloader
&trans       &trans     &trans    &trans    &trans     &trans  &trans                      &out OUT_USB      &rgb_ug RGB_TOG                &trans        &trans             &trans           &trans        &trans
&trans       &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none   &trans                      &out OUT_BLE      &ext_power EP_TOG              &kp C_PREV    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &none
&trans       &none      &none     &none     &none      &none   &trans  &trans  &trans      &trans            &out OUT_TOG                   &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans     &trans    &trans               &trans  &trans  &trans  &kp C_STOP  &kp C_PLAY_PAUSE                     &kp K_MUTE                &bt BT_CLR         &bt BT_NXT       &bt BT_PRV    &trans
            >;
        };
    };
};
