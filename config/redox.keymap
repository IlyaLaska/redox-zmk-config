/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        arrow_fn: arrow_fn {
            compatible = "zmk,behavior-macro";
            label = "ARROW_FN";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };
        full_arrow_fn: full_arrow_fn {
            compatible = "zmk,behavior-macro";
            label = "FULL_ARROW_FN";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp T &kp SPACE &kp F &kp N &kp SPACE &kp EQUAL &kp SPACE &kp LPAR &kp RPAR &kp SPACE &kp EQUAL &kp GT &kp SPACE &kp RBKT &kp RBRC>;
        };
        const_wrd: const_wrd {
            compatible = "zmk,behavior-macro";
            label = "CONST_WRD";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp T &kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                                  |  6     |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |                  |  )    |  Y     |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |                  |  ]    |  H     |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN |   HOME | END   |  N     |  M    |  ,    |  .   | /  | SHFT(RET) |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   |   DEL  | SPACE |  RAISE | LEFT  | DOWN | UP |   RIGHT   |

            bindings = <
&kp GRAVE  &kp N1    &kp N2    &kp N3          &kp N4  &kp N5                                                                                                               &kp N6                &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q     &kp W     &kp E           &kp R   &kp T      &kp LPAR                                                                     &kp RPAR                     &kp Y                 &kp U   &kp I      &kp O     &kp P     &kp EQUAL
&kp ESC    &kp A     &kp S     &kp D           &kp F   &kp G      &kp LBKT                                                                     &kp RBKT                     &kp H                 &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z     &kp X     &kp C           &kp V   &kp B      &mt LEFT_CONTROL LEFT_ARROW  &mt LEFT_ALT DOWN_ARROW  &mt LEFT_GUI UP_ARROW  &mt RIGHT_SHIFT RIGHT_ARROW  &kp N                 &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp BACKSLASH
&kp LCTRL  &kp LALT  &kp LGUI  &kp LEFT_SHIFT          &lt 3 ESC  &lt 1 SPACE                  &lt 2 TAB                &lt 2 ENTER            &lt 1 BACKSPACE                      &lt 3 DELETE          &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT
            >;
        };

        num {
            // --------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |   4   |  5  |                   ---              |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
            // | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
            // | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |

            bindings = <
&trans  &kp LC(Z)         &kp LC(X)  &kp LC(C)  &kp LC(P)  &kp LC(LS(Z))                                                    &kp LG(LS(Z))            &kp LG(P)           &kp LG(C)           &kp LG(X)           &kp LG(Z)               &trans
&trans  &kp LEFT_BRACKET  &kp N7     &kp N8     &kp N9     &kp RIGHT_BRACKET  &kp COMMA                             &trans  &kp N6                   &kp N7              &kp N8              &kp N9              &kp N0                  &kp DEL
&trans  &kp SEMI          &kp N4     &kp N5     &kp N6     &kp EQUAL          &kp SLASH                             &trans  &kp KP_MULTIPLY          &mt RIGHT_SHIFT N4  &mt RIGHT_GUI N5    &mt LEFT_ALT N6     &mt RIGHT_CONTROL PLUS  &kp KP_MINUS
&trans  &kp GRAVE         &kp N1     &kp N2     &kp N3     &kp BACKSLASH      &trans     &trans     &lt 4 CAPSLOCK  &trans  &kp KP_DIVIDE            &kp N1              &kp N2              &kp N3              &kp RET                 &kp RET
&trans  &trans            &trans     &trans                &kp PERIOD         &kp N0     &kp MINUS  &trans          &trans                   &trans                      &kp LS(LC(LG(N4)))  &kp LC(LG(LS(N3)))  &trans                  &trans
            >;
        };

        sym {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6   |  7   |  8   |  9   |  0    |  DEL  |
            // | ESC   |  !  |  @  |   #   |  $  |  %  |   (   |           ---        |  )    |  ^   |  &   |  *   |  (   |  )    |  DEL  |
            // | CTRL  |  _  |  +  |   {   |  }  | "|" |   [   |           ---        |  ]    | HOME | PGUP | PRSC | UP   |  `    |   ~   |
            // | SHIFT | ESC | GUI |   (   |  )  |     | PG_UP | PG_DOWN | --- | HOME | END   | END  | PGDN | LEFT | DOWN | RIGHT |  RET  |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |    RAISE    | LEFT | DOWN | UP    | RIGHT |

            bindings = <
&trans   &trans          &trans           &full_arrow_fn   &const_wrd            &arrow_fn                                                                &trans          &trans              &trans              &trans            &trans           &trans
&kp ESC  &kp LEFT_BRACE  &kp AMPERSAND    &kp KP_ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE   &kp LESS_THAN                                  &trans  &trans          &kp HOME            &kp END             &kp PG_UP         &kp PAGE_DOWN    &trans
&trans   &kp COLON       &kp DOLLAR       &kp PERCENT      &kp CARET             &kp PLUS          &kp QUESTION                                   &trans  &trans          &kp LEFT_ARROW      &kp DOWN_ARROW      &kp UP            &kp RIGHT_ARROW  &trans
&trans   &kp TILDE       &kp EXCLAMATION  &kp AT           &kp POUND             &kp PIPE          &trans                 &trans          &trans  &trans  &trans          &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT)    &trans
&trans   &trans          &trans           &mo 3                                  &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &trans  &trans          &trans                      &trans              &trans            &trans           &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // |  F1   |  F2   |    F3    |    F4     |     F5     | F6 |                   ---                | F7  | F8  |  F9  |  F10 | F11 | F12        |
            // | TAB   |       |          |           |            |    | BOOTL |           ---        |  )    | BT1 | BT2 |  BT3 |  BT4 | BT5 | OUTPUT TGL |
            // | CTRL  | MUTE  |  Vol Dn  |  Vol Up   | Play/Pause |    | RESET |           ---        |  ]    | F1  | F2  |  F3  |  F4  | F5  | F6         |
            // | SHIFT | PSCRN |  PSCRN   |   CAPS    |            |    | PG_UP | PG_DOWN | --- | HOME | END   | F7  | F8  |  F9  |  F10 | F11 | F12        |
            // | CRTL  | ALT   |  GUI     |   LOWER   |      GUI        | LOWER | SPACE   | --- | DEL  | SPACE |   RAISE   | LEFT | DOWN | UP  |   RIGHT    |

            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                                  &kp F7                &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR  &out OUT_USB                  &out OUT_USB  &bt BT_SEL 0          &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans        &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &none         &none       &out OUT_BLE                  &out OUT_BLE  &none                 &kp C_PREV    &kp C_PP      &kp C_NEXT    &none         &none
&trans        &none         &none         &none         &none         &none       &trans        &trans  &trans  &trans        &none                 &none         &none         &none         &none         &none
&trans        &trans        &trans        &trans                      &trans      &trans        &trans  &trans  &trans                      &trans                &trans        &trans        &trans        &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans                                  &trans          &trans     &trans    &trans    &trans     &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans                  &trans  &trans          &trans     &trans    &trans    &trans     &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans                  &trans  &trans          &kp RSHFT  &kp RGUI  &kp LALT  &kp RCTRL  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans  &trans  &trans  &trans  &trans          &trans     &trans    &trans    &trans     &trans
&trans  &trans   &trans  &trans          &trans  &trans  &trans  &trans  &trans          &trans             &trans    &trans    &trans     &trans
            >;
        };
    };
};
